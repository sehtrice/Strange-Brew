#!/bin/bash
##################################################################################################
# Git Delete local merged branch in Working Git Repo v 1.1
#
# Written 01/04/2022 by Seth (DrumLordJr) Rice
# King of the Ricepad - sethrice@gmail.com
#
##################################################################################################
# Things to add:
#
# Change Log:
# 01/04/22 - 1.0 - Created
#
##################################################################################################
#
# Show Options for Usage
if [ ${#@} != 1 ]; then
  echo "==========================================================================================="
  echo "  Usage: $0 <local-git-path>"
  echo
  echo "    <local-git-path>      Local GIT repo path"
  echo
  echo " Example:                 $0 '/opt/GIT-WORKING/puppet/' 'srice_OPERATIONS_12' "
  echo "                          $0 '/opt/GIT-WORKING/puppet/modules/' 'srice_OPERATIONS_12' "
  echo "		or for a single specified repo, leave off trailing slash "
  echo "			  $0 '/opt/GIT-WORKING/puppet/puppet-src' 'srice_OPERATIONS_12' "
  echo
  echo " Summary:"
  echo " Delete merged local branch from all git repo working subdirectories specified"
  echo " Or for specified directory git repo by leaving off the trailing slash"
  echo
  echo "==========================================================================================="
  echo
  exit
fi

# Check for trailing slash to determine if it should check multiple or single git repo paths.
determine=$(echo $1 | grep -Ei '.+\/[a-z,0-9._-]+$')
protect1='production'
protect2='main'
protect3='master'

if [[ $determine ]] ; then
	echo "Checking for merged branches in $1"
	cd $1
	git branch --merged | egrep -v "(^\*|$protect1|$protect2|$protect3)" | xargs -n 1 git branch -d ;
  git remote prune origin
	exit
else
	for i in `ls $1`; do
		echo "Checking for merged branches in $1$i"
		cd $1$i
		git branch --merged | egrep -v "(^\*|$protect1|$protect2|$protect3)" | xargs -n 1 git branch -d ;
    git remote prune origin
		cd ..;
		echo
	done
fi
